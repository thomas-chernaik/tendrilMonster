// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWStructuredBuffer<float3> verticesIn;
RWStructuredBuffer<float3> verticesOut;
float length;
[numthreads(64,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    //if the y coord of this vertex is more than length
    if(verticesIn[id.x].z > length)
    {
        //add it to verticesOut with zero x and z values and y value of length
        verticesOut[id.x] = float3(0, 0, length);

    }
    else
    {
        //we just need to add the vertex to vertecies out
        verticesOut[id.x] = verticesIn[id.x];
    }
}
